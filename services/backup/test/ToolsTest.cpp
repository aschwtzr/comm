#include "Tools.h"
#include <gtest/gtest.h>

#include <stdio.h>

#include <ctime>
#include <iomanip>
#include <iostream>
#include <sstream>

using namespace comm::network::tools;

class ToolsTest : public testing::Test {
protected:
  virtual void SetUp() {
  }
  virtual void TearDown() {
  }
};

std::vector<std::string> example1ByteChars = {
    "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o",
    "p", "r", "s", "t", "q", "w", "u", "v", "x", "y", "z", "0", "1", "2", "3"};

std::vector<std::string> example2ByteChars = {
    "╚К", "╚М", "╚О", "╚Р", "╚Т", "╚Ф", "╚Ц", "╚Ш", "╚Ъ", "╚Ь", "╚Ю", "╚а", "╚в", "╚д", "╚ж",
    "╚и", "╚к", "╚м", "╚о", "╚░", "╚▓", "╚┤", "╚╢", "╚╕", "╚║", "╚╝", "╚╛", "╔А", "╔В", "╔Д",
    "╔Ж", "╔И", "╔К", "╔М", "╔О", "╔Р", "╔Т", "╔Ф", "╔Ц", "╔Ш", "╔Ъ", "╔Ь", "╔Ю", "╔а", "╔в",
    "╔д", "╔ж", "╔и", "╔к", "╔м", "╔о", "╔░", "╔▓", "╔┤", "╔╢", "╔╕", "╔║", "╔╝", "╔╛", "╩А",
    "╩В", "╩Д", "╩Ж", "╩И", "╩К", "╩М", "╩О", "╩Р", "╩Т", "╩Ф", "╩Ц", "╩Ш", "╩Ъ", "╩Ь", "╩Ю",
    "╩а", "╩в", "╩д", "╩ж", "╩и", "╩к", "╩м", "╩о", "╩░", "╩▓", "╩┤", "╩╢", "╩╕", "╩║", "╩╝",
    "╩╛", "╦А", "╦В", "╦Д", "╦Ж", "╦И", "╦К", "╦М", "╦О", "╦Р", "╦Т", "╦Ф", "╦Ц", "╦Ш", "╦Ъ",
    "╦Ь", "╦Ю", "╦а", "╦в", "╦д", "╦ж", "╦и", "╦к", "╦м", "╦о", "╦░", "╦▓", "╦┤", "╦╢", "╦╕",
    "╦║", "╦╝", "╦╛", "╠А",  "╠В",  "╠Д",  "╠Ж",  "╠И",  "╠К",  "╠М",  "╠О",  "╠Р",  "╠Т",  "╠Ф",  "╠Ц",
    "╠Ш",  "╠Ъ",  "╠Ь",  "╠Ю",  "╠а",  "╠в",  "╠д",  "╠ж",  "╠и",  "╠к",  "╠м",  "╠о",  "╠░",  "╠▓",  "╠┤",
    "╠╢",  "╠╕",  "╠║",  "╠╝",  "╠╛",  "═А",  "═В",  "═Д",  "═Ж",  "═И",  "═К",  "═М",  "═О",  "═Р",  "═Т",
    "═Ф",  "═Ц",  "═Ш",  "═Ъ",  "═Ь",  "═Ю",  "═а",  "═в",  "═д",  "═ж",  "═и",  "═к",  "═м",  "═о",  "═░",
    "═▓", "═┤", "═╢", "═║", "═╝", "═╛", "╬Д", "╬Ж", "╬И", "╬К", "╬О", "╬Р", "╬Т", "╬Ф", "╬Ц",
    "╬Ш", "╬Ъ", "╬Ь", "╬Ю", "╬а", "╬г", "╬е", "╬з", "╬й", "╬л", "╬н", "╬п", "╬▒", "╬│", "╬╡",
    "╬╖", "╬╣", "╬╗", "╬╜", "╬┐", "╧Б", "╧Г", "╧Е", "╧З", "╧Й", "╧Л", "╧Н", "╧П", "╧С", "╧У",
    "╧Х", "╧Ч", "╧Щ", "╧Ы", "╧Э", "╧Я", "╧б", "╧г", "╧е", "╧з", "╧й", "╧л", "╧н", "╧п", "╧▒",
    "╧│", "╧╡", "╧╖", "╧╣", "╧╗", "╧╜", "╧┐", "╨Б", "╨Г", "╨Е", "╨З",
};

std::vector<std::string> example3ByteChars = {
    "ра╗",   "ра╜",   "рбА",   "рбВ",   "рбД",   "рбЖ",   "рбИ",   "рбК",   "рбМ",   "рбО",   "рбР",
    "рбТ",   "рбФ",   "рбЦ",   "рбШ",   "рбЪ",    "рбЮ",   "рбб", "рбг", "рбе", "рбз", "рбй",
    "рб░", "рб▓", "рб┤", "рб╢", "рб╕", "рб║", "рб╝", "рб╛", "рвА", "рвВ", "рвД",
    "рвЖ", "рвИ", "рвК", "рвМ", "рвО", "рвС", "рвЩ", "рвЫ", "рвЭ", "рвЯ", "рвб",
    "рвг",   "рве",   "рвз",   "рвй",   "рвл",   "рвн", "рвп", "рв▒", "рв│", "рв╡", "рв╖",
    "рв╣", "рв╗", "рв╜", "рв┐", "ргБ", "ргГ", "ргЕ", "ргЗ", "ргЙ", "ргЛ", "ргН",
    "ргП", "ргС", "ргУ", "ргХ", "ргЧ", "ргЩ", "ргЫ", "ргЭ", "ргЯ", "ргб", "ргг",
    "рге",    "ргз",    "ргй",    "ргл",    "ргн",    "ргп",    "рг▒",    "рг│",    "рг╡",    "рг╖",    "рг╣",
    "рг╗",    "рг╜",    "рг┐", "рдБ",    "рдГ",   "рдЕ",   "рдЗ",   "рдЙ",   "рдЛ",   "рдН",   "рдП",
    "рдС",   "рдУ",   "рдХ",   "рдЧ",   "рдЩ",   "рдЫ",   "рдЭ",   "рдЯ",   "рдб",   "рдг",   "рде",
    "рдз",   "рдй",   "рдл",   "рдн",   "рдп",   "рд▒",   "рд│",   "рд╡",   "рд╖",   "рд╣",   "рд╗",
    "рд╜",   "рд┐",   "реБ",    "реГ",    "реЕ",    "реЗ",    "реЙ",   "реЛ",   "реН",    "реП",   "реС",
    "реУ",    "реХ",    "реЧ",    "реЩ",   "реЫ",   "реЭ",   "реЯ",   "реб",   "рег",    "рее",   "рез",
    "рей",   "рел",   "рен",   "реп",   "ре▒",   "ре│",   "ре╡",   "ре╖",   "ре╣",   "ре╗",   "ре╜",
    "ре┐",   "ржБ",    "ржГ",   "ржЖ",   "ржИ",   "ржК",   "ржМ",   "ржР",   "ржФ",   "ржЦ",   "ржШ",
    "ржЪ",   "ржЬ",   "ржЮ",   "ржа",   "ржв",   "ржд",   "ржж",   "ржи",   "ржл",   "ржн",   "ржп",
    "рж▓",   "рж╖",   "рж╣",   "рж╜",   "рж┐",   "рзБ",    "рзГ",    "рзЗ",   "рзЛ",   "рзН",    "рзЧ",
    "рзЭ",   "рза",   "рзв",    "рзж",   "рзи",   "рзк",   "рзм",   "рзо",   "рз░",   "рз▓",   "рз┤",
    "рз╢",   "рз╕",   "рз║",   "рз╝", "рз╛", "риВ",    "риЕ",   "риЗ",   "риЙ",   "риП",   "риУ",
    "риХ",   "риЧ",   "риЩ",   "риЫ",   "риЭ",   "риЯ",   "риб",   "риг",   "рие",   "риз",   "рик",
    "рим",   "рио",   "ри░",   "ри│",   "ри╢",   "ри╣",   "ри╛",   "рйА",   "рйВ",    "рйИ",    "рйМ",
    "рйС",    "рйЪ",   "рйЬ",   "рйж",   "рйи",   "рйк",   "рйм",   "рйо",   "рй░",    "рй▓",   "рй┤",
    "рй╢", "ркВ",    "ркЕ",   "ркЗ",   "ркЙ",   "ркЛ",   "ркН",   "ркР",   "ркУ",   "ркХ",   "ркЧ",
    "ркЩ",   "ркЫ",   "ркЭ",   "ркЯ",   "ркб",   "ркг",   "рке",   "ркз",   "ркк",   "ркм",   "рко",
    "рк░",   "рк│",   "рк╢",   "рк╕",   "рк╝",    "рк╛",   "рлА",   "рлВ",    "рлД",    "рлЗ",    "рлЙ",
    "рлМ",   "рлР",   "рлб",   "рлг",    "рлз",   "рлй",   "рлл",   "рлн",   "рлп",   "рл▒",   "рл║",
    "рл╝", "рл╛", "рмБ",    "рмГ",   "рмЖ",   "рмИ",   "рмК",   "рмМ",   "рмР",   "рмФ",   "рмЦ",
    "рмШ",   "рмЪ",   "рмЬ",   "рмЮ",   "рма",   "рмв",   "рмд",   "рмж",   "рми",   "рмл",   "рмн",
    "рмп",   "рм▓",   "рм╡",   "рм╖",   "рм╣",   "рм╜",   "рм┐",    "рнБ",    "рнГ",    "рнЗ",   "рнЛ",
    "рнН",    "рнЦ",    "рнЬ",   "рнЯ",   "рнб",   "рнг",    "рнз",   "рнй",   "рнл",   "рнн",   "рнп",
    "рн▒",   "рн│",   "рн╡",   "рн╖",   "роГ",   "роЖ",   "роИ",   "роК",   "роП",   "роТ",   "роФ",
    "роЩ",   "роЬ",   "роЯ",   "род",   "рой",   "роо",   "ро░",   "ро▓",   "ро┤",   "ро╢",   "ро╕",
    "ро╛",   "рпА",    "рпВ",   "рпЗ",   "рпК",   "рпМ",   "рпР",   "рпж",   "рпи",   "рпк",   "рпм",
    "рпо",   "рп░",   "рп▓",   "рп┤",   "рп╢",   "рп╕",   "рп║",   "р░Б",   "р░Г",   "р░Е",   "р░З",
    "р░Й",   "р░Л",   "р░О",   "р░Р",   "р░У",   "р░Х",   "р░Ч",   "р░Щ",   "р░Ы",   "р░Э",   "р░Я",
    "р░б",   "р░г",   "р░е",   "р░з",   "р░к",   "р░м",   "р░о",   "р░░",   "р░▓",   "р░┤", "р░╢",
    "р░╕",   "р░╝", "р░╛",    "р▒А",    "р▒В",   "р▒Д",   "р▒З",    "р▒К",    "р▒М",    "р▒Х",    "р▒Ш",
    "р▒Ъ", "р▒а",   "р▒в",    "р▒ж",   "р▒и",   "р▒к",   "р▒м",   "р▒о",   "р▒╖", "р▒╣",   "р▒╗",
    "р▒╜",   "р▒┐",   "р▓Б", "р▓Г",   "р▓Е",   "р▓З",   "р▓Й",   "р▓Л",   "р▓О",   "р▓Р",   "р▓У",
    "р▓Х",   "р▓Ч",   "р▓Щ",   "р▓Ы",   "р▓Э",   "р▓Я",   "р▓б",   "р▓г",   "р▓е",   "р▓з",   "р▓к",
    "р▓м",   "р▓о",   "р▓░",   "р▓▓",   "р▓╡",   "р▓╖",   "р▓╣",   "р▓╜",   "р▓┐",    "р│Б",   "р│Г",
    "р│Ж",    "р│И",   "р│Л",   "р│Н",    "р│Ц",   "р│Ю",   "р│б",   "р│г",    "р│з",   "р│й",   "р│л",
    "р│н",   "р│п",   "р│▓",   "р┤Б", "р┤Г",   "р┤Е",   "р┤З",   "р┤Й",   "р┤Л",   "р┤О",   "р┤Р",
    "р┤У",   "р┤Х",   "р┤Ч",   "р┤Щ",   "р┤Ы",   "р┤Э",   "р┤Я",   "р┤б",   "р┤г",   "р┤е",   "р┤з",
    "р┤й",   "р┤л",   "р┤н",   "р┤п",   "р┤▒",   "р┤│",   "р┤╡",   "р┤╖",   "р┤╣",   "р┤╗", "р┤╜",
    "р┤┐",   "р╡Б",    "р╡Г",    "р╡Ж",   "р╡И",   "р╡Л",   "р╡Н",    "р╡П", "р╡Х", "р╡Ч",   "р╡Щ",
    "р╡Ы", "р╡Э", "р╡Я", "р╡б",   "р╡г",    "р╡з",
};

std::vector<std::string> example4ByteChars = {
    "ЁТАА", "ЁТАБ", "ЁТАВ", "ЁТАГ", "ЁТАД", "ЁТАЕ", "ЁТАЖ", "ЁТАЗ", "ЁТАИ", "ЁТАЙ", "ЁТАК", "ЁТАЛ", "ЁТАМ", "ЁТАН", "ЁТАО",
    "ЁТАП", "ЁТАР", "ЁТАС", "ЁТАТ", "ЁТАУ", "ЁТАФ", "ЁТАХ", "ЁТАЦ", "ЁТАЧ", "ЁТАШ", "ЁТАЩ", "ЁТАЪ", "ЁТАЫ", "ЁТАЬ", "ЁТАЭ",
    "ЁТАЮ", "ЁТАЯ", "ЁТАа", "ЁТАб", "ЁТАв", "ЁТАг", "ЁТАд", "ЁТАе", "ЁТАж", "ЁТАз", "ЁТАи", "ЁТАй", "ЁТАк", "ЁТАл", "ЁТАм",
    "ЁТАн", "ЁТАо", "ЁТАп", "ЁТА░", "ЁТА▒", "ЁТА▓", "ЁТА│", "ЁТА┤", "ЁТА╡", "ЁТА╢", "ЁТА╖", "ЁТА╕", "ЁТА╣", "ЁТА║", "ЁТА╗",
    "ЁТА╝", "ЁТА╜", "ЁТА╛", "ЁТА┐", "ЁТБА", "ЁТББ", "ЁТБВ", "ЁТБГ", "ЁТБД", "ЁТБЕ", "ЁТБЖ", "ЁТБЗ", "ЁТБИ", "ЁТБЙ", "ЁТБК",
    "ЁТБЛ", "ЁТБМ", "ЁТБН", "ЁТБО", "ЁТБП", "ЁТБР", "ЁТБС", "ЁТБТ", "ЁТБУ", "ЁТБФ", "ЁТБХ", "ЁТБЦ", "ЁТБЧ", "ЁТБШ", "ЁТБЩ",
    "ЁТБЪ", "ЁТБЫ", "ЁТБЬ", "ЁТБЭ", "ЁТБЮ", "ЁТБЯ", "ЁТБа", "ЁТБб", "ЁТБв", "ЁТБг", "ЁТБд", "ЁТБе", "ЁТБж", "ЁТБз", "ЁТБи",
    "ЁТБй", "ЁТБк", "ЁТБл", "ЁТБм", "ЁТБн", "ЁТБо", "ЁТБп", "ЁТБ░", "ЁТБ▒", "ЁТБ▓", "ЁТБ│", "ЁТБ┤", "ЁТБ╡", "ЁТБ╢", "ЁТБ╖",
    "ЁТБ╕", "ЁТБ╣", "ЁТБ║", "ЁТБ╗", "ЁТБ╝", "ЁТБ╜", "ЁТБ╛", "ЁТБ┐", "ЁТВА", "ЁТВБ", "ЁТВВ", "ЁТВГ", "ЁТВД", "ЁТВЕ", "ЁТВЖ",
    "ЁТВЗ", "ЁТВИ", "ЁТВЙ", "ЁТВК", "ЁТВЛ", "ЁТВМ", "ЁТВН", "ЁТВО", "ЁТВП", "ЁТВР", "ЁТВС", "ЁТВТ", "ЁТВУ", "ЁТВФ", "ЁТВХ",
    "ЁТВЦ", "ЁТВЧ", "ЁТВШ", "ЁТВЩ", "ЁТВЪ", "ЁТВЫ", "ЁТВЬ", "ЁТВЭ", "ЁТВЮ", "ЁТВЯ", "ЁТВа", "ЁТВб", "ЁТВв", "ЁТВг", "ЁТВд",
    "ЁТВе", "ЁТВж", "ЁТВз", "ЁТВи", "ЁТВй", "ЁТВк", "ЁТВл", "ЁТВм", "ЁТВн", "ЁТВо", "ЁТВп", "ЁТВ░", "ЁТВ▒", "ЁТВ▓", "ЁТВ│",
    "ЁТВ┤", "ЁТВ╡", "ЁТВ╢", "ЁТВ╖", "ЁТВ╕", "ЁТВ╣", "ЁТВ║", "ЁТВ╗", "ЁТВ╝", "ЁТВ╜", "ЁТВ╛", "ЁТВ┐", "ЁТГА", "ЁТГБ", "ЁТГВ",
    "ЁТГГ", "ЁТГД", "ЁТГЕ", "ЁТГЖ", "ЁТГЗ", "ЁТГИ", "ЁТГЙ", "ЁТГК", "ЁТГЛ", "ЁТГМ", "ЁТГН", "ЁТГО", "ЁТГП", "ЁТГР", "ЁТГС",
    "ЁТГТ", "ЁТГУ", "ЁТГФ", "ЁТГХ", "ЁТГЦ", "ЁТГЧ", "ЁТГШ", "ЁТГЩ", "ЁТГЪ", "ЁТГЫ", "ЁТГЬ", "ЁТГЭ", "ЁТГЮ", "ЁТГЯ", "ЁТГа",
    "ЁТГб", "ЁТГв", "ЁТГг", "ЁТГд", "ЁТГе", "ЁТГж", "ЁТГз", "ЁТГи", "ЁТГй", "ЁТГк", "ЁТГл", "ЁТГм", "ЁТГн", "ЁТГо", "ЁТГп"};

std::string generateRandomUtf8String(std::size_t &length) {

  std::string result = "";

  for (std::size_t i = 0; i < length; i++) {
    std::size_t currentSize = rand() % 4 + 1;
    switch (currentSize) {
      case 1:
        result += example1ByteChars[rand() % example1ByteChars.size()];
        break;
      case 2:
        result += example2ByteChars[rand() % example2ByteChars.size()];
        break;
      case 3:
        result += example3ByteChars[rand() % example3ByteChars.size()];
        break;
      case 4:
        result += example4ByteChars[rand() % example4ByteChars.size()];
        break;
    }
  }

  return result;
}

TEST_F(ToolsTest, TestOperationsOnTools) {

  std::vector<std::size_t> lengths = {10, 100, 1000, 2000, 4000};

  for (std::size_t length : lengths) {
    std::string testString = generateRandomUtf8String(length);

    EXPECT_EQ(length, getUtf8Length(testString));
  }
}